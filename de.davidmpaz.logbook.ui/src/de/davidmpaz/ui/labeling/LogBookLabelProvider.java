/*
 * generated by Xtext 2.29.0
 */
package de.davidmpaz.ui.labeling;

import com.google.inject.Inject;

import de.davidmpaz.logBook.Date;
import de.davidmpaz.logBook.LogEntry;
import de.davidmpaz.logBook.Model;
import de.davidmpaz.logBook.Task;
import de.davidmpaz.ui.time.TimeAggregator;

import org.eclipse.ui.ide.IDE.SharedImages;
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider;
import org.eclipse.jface.viewers.StyledString;
import org.eclipse.swt.SWT;
import org.eclipse.swt.graphics.Image;
import org.eclipse.swt.graphics.RGB;
import org.eclipse.ui.ISharedImages;
import org.eclipse.ui.PlatformUI;
import org.eclipse.xtext.ui.editor.utils.TextStyle;
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider;
import org.eclipse.xtext.ui.label.StylerFactory;

/**
 * Provides labels for EObjects.
 * 
 * See
 * https://www.eclipse.org/Xtext/documentation/310_eclipse_support.html#label-provider
 */
public class LogBookLabelProvider extends DefaultEObjectLabelProvider {

	@Inject
	private StylerFactory stylerFactory;
	
	@Inject()
	private TimeAggregator timeAggregator;

	@Inject
	public LogBookLabelProvider(AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}

	// Labels and icons can be computed like this:

	Image image(Model ele) {
		return PlatformUI.getWorkbench().getSharedImages().getImage(ISharedImages.IMG_OBJ_FILE);
	}

	StyledString text(Task ele) {
		StyledString activity = stylerFactory.createFromXtextStyle(ele.getActivity().getLiteral(), getActivityStyle());
		StyledString desc = stylerFactory.createFromXtextStyle(": " + ele.getDescription(), getDescriptionStyle());

		return activity.append(desc);
	}

	Image image(Task ele) {
		return PlatformUI.getWorkbench().getSharedImages().getImage(SharedImages.IMG_OBJS_TASK_TSK);
	}

	StyledString text(LogEntry ele) {
		StyledString date = stylerFactory.createFromXtextStyle(toString(ele.getDate()), getDateStyle());
		return date.append(stylerFactory.createFromXtextStyle(timeAggregator.getHourLabel(ele), getHourStyle()));
	}

	Image image(LogEntry ele) {
		return PlatformUI.getWorkbench().getSharedImages().getImage(ISharedImages.IMG_OBJS_INFO_TSK);
	}

	String text(Date date) {
		return toString(date);
	}

	private String toString(Date date) {
		return date.getDay() + "." + date.getMonth() + "." + date.getYear();
	}

	// TODO Define all styles as settings and get it from there
	private TextStyle getActivityStyle() {
		TextStyle textStyle = new TextStyle();
		textStyle.setColor(new RGB(212, 162, 106));
		textStyle.setStyle(SWT.BOLD|SWT.ITALIC);
		return textStyle;
	}

	private TextStyle getDateStyle() {
		TextStyle textStyle = getDefaultStyle();
		textStyle.setColor(new RGB(48, 117, 67));
		textStyle.setStyle(SWT.BOLD);
		return textStyle;
	}
	
	private TextStyle getHourStyle() {
		TextStyle textStyle = getDefaultStyle();
		textStyle.setColor(new RGB(163, 159, 158));
		textStyle.setStyle(SWT.NORMAL);
		return textStyle;
	}
	
	private TextStyle getDescriptionStyle() {
		TextStyle textStyle = getDefaultStyle();
		textStyle.setColor(new RGB(73, 112, 184));
		textStyle.setStyle(SWT.NORMAL);
		return textStyle;
	}

	private TextStyle getDefaultStyle() {
		TextStyle textStyle = new TextStyle();
		textStyle.setColor(new RGB(0, 0, 0));
		textStyle.setStyle(SWT.NORMAL);
		return textStyle;
	}
}
